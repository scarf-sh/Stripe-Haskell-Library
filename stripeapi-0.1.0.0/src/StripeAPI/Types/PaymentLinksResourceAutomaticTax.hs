-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema PaymentLinksResourceAutomaticTax
module StripeAPI.Types.PaymentLinksResourceAutomaticTax where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import {-# SOURCE #-} StripeAPI.Types.Account
import {-# SOURCE #-} StripeAPI.Types.ConnectAccountReference

-- | Defines the object schema located at @components.schemas.payment_links_resource_automatic_tax@ in the specification.
-- 
-- 
data PaymentLinksResourceAutomaticTax = PaymentLinksResourceAutomaticTax {
  -- | enabled: If \`true\`, tax will be calculated automatically using the customer\'s location.
  paymentLinksResourceAutomaticTaxEnabled :: GHC.Types.Bool
  -- | liability: The account that\'s liable for tax. If set, the business address and tax registrations required to perform the tax calculation are loaded from this account. The tax transaction is returned in the report of the connected account.
  , paymentLinksResourceAutomaticTaxLiability :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable PaymentLinksResourceAutomaticTaxLiability'NonNullable))
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PaymentLinksResourceAutomaticTax
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["enabled" Data.Aeson.Types.ToJSON..= paymentLinksResourceAutomaticTaxEnabled obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("liability" Data.Aeson.Types.ToJSON..=)) (paymentLinksResourceAutomaticTaxLiability obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["enabled" Data.Aeson.Types.ToJSON..= paymentLinksResourceAutomaticTaxEnabled obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("liability" Data.Aeson.Types.ToJSON..=)) (paymentLinksResourceAutomaticTaxLiability obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PaymentLinksResourceAutomaticTax
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PaymentLinksResourceAutomaticTax" (\obj -> (GHC.Base.pure PaymentLinksResourceAutomaticTax GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "enabled")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "liability"))}
-- | Create a new 'PaymentLinksResourceAutomaticTax' with all required fields.
mkPaymentLinksResourceAutomaticTax :: GHC.Types.Bool -- ^ 'paymentLinksResourceAutomaticTaxEnabled'
  -> PaymentLinksResourceAutomaticTax
mkPaymentLinksResourceAutomaticTax paymentLinksResourceAutomaticTaxEnabled = PaymentLinksResourceAutomaticTax{paymentLinksResourceAutomaticTaxEnabled = paymentLinksResourceAutomaticTaxEnabled,
                                                                                                              paymentLinksResourceAutomaticTaxLiability = GHC.Maybe.Nothing}
-- | Defines the object schema located at @components.schemas.payment_links_resource_automatic_tax.properties.liability.anyOf@ in the specification.
-- 
-- The account that\\\'s liable for tax. If set, the business address and tax registrations required to perform the tax calculation are loaded from this account. The tax transaction is returned in the report of the connected account.
data PaymentLinksResourceAutomaticTaxLiability'NonNullable = PaymentLinksResourceAutomaticTaxLiability'NonNullable {
  -- | account: The connected account being referenced when \`type\` is \`account\`.
  paymentLinksResourceAutomaticTaxLiability'NonNullableAccount :: (GHC.Maybe.Maybe PaymentLinksResourceAutomaticTaxLiability'NonNullableAccount'Variants)
  -- | type: Type of the account referenced.
  , paymentLinksResourceAutomaticTaxLiability'NonNullableType :: (GHC.Maybe.Maybe PaymentLinksResourceAutomaticTaxLiability'NonNullableType')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PaymentLinksResourceAutomaticTaxLiability'NonNullable
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account" Data.Aeson.Types.ToJSON..=)) (paymentLinksResourceAutomaticTaxLiability'NonNullableAccount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("type" Data.Aeson.Types.ToJSON..=)) (paymentLinksResourceAutomaticTaxLiability'NonNullableType obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account" Data.Aeson.Types.ToJSON..=)) (paymentLinksResourceAutomaticTaxLiability'NonNullableAccount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("type" Data.Aeson.Types.ToJSON..=)) (paymentLinksResourceAutomaticTaxLiability'NonNullableType obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON PaymentLinksResourceAutomaticTaxLiability'NonNullable
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "PaymentLinksResourceAutomaticTaxLiability'NonNullable" (\obj -> (GHC.Base.pure PaymentLinksResourceAutomaticTaxLiability'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "account")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "type"))}
-- | Create a new 'PaymentLinksResourceAutomaticTaxLiability'NonNullable' with all required fields.
mkPaymentLinksResourceAutomaticTaxLiability'NonNullable :: PaymentLinksResourceAutomaticTaxLiability'NonNullable
mkPaymentLinksResourceAutomaticTaxLiability'NonNullable = PaymentLinksResourceAutomaticTaxLiability'NonNullable{paymentLinksResourceAutomaticTaxLiability'NonNullableAccount = GHC.Maybe.Nothing,
                                                                                                                paymentLinksResourceAutomaticTaxLiability'NonNullableType = GHC.Maybe.Nothing}
-- | Defines the oneOf schema located at @components.schemas.payment_links_resource_automatic_tax.properties.liability.anyOf.properties.account.anyOf@ in the specification.
-- 
-- The connected account being referenced when \`type\` is \`account\`.
data PaymentLinksResourceAutomaticTaxLiability'NonNullableAccount'Variants =
   PaymentLinksResourceAutomaticTaxLiability'NonNullableAccount'Text Data.Text.Internal.Text
  | PaymentLinksResourceAutomaticTaxLiability'NonNullableAccount'Account Account
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PaymentLinksResourceAutomaticTaxLiability'NonNullableAccount'Variants
    where {toJSON (PaymentLinksResourceAutomaticTaxLiability'NonNullableAccount'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (PaymentLinksResourceAutomaticTaxLiability'NonNullableAccount'Account a) = Data.Aeson.Types.ToJSON.toJSON a}
instance Data.Aeson.Types.FromJSON.FromJSON PaymentLinksResourceAutomaticTaxLiability'NonNullableAccount'Variants
    where {parseJSON val = case (PaymentLinksResourceAutomaticTaxLiability'NonNullableAccount'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((PaymentLinksResourceAutomaticTaxLiability'NonNullableAccount'Account Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
                           {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                            Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the enum schema located at @components.schemas.payment_links_resource_automatic_tax.properties.liability.anyOf.properties.type@ in the specification.
-- 
-- Type of the account referenced.
data PaymentLinksResourceAutomaticTaxLiability'NonNullableType' =
   PaymentLinksResourceAutomaticTaxLiability'NonNullableType'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PaymentLinksResourceAutomaticTaxLiability'NonNullableType'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PaymentLinksResourceAutomaticTaxLiability'NonNullableType'EnumAccount -- ^ Represents the JSON value @"account"@
  | PaymentLinksResourceAutomaticTaxLiability'NonNullableType'EnumSelf -- ^ Represents the JSON value @"self"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PaymentLinksResourceAutomaticTaxLiability'NonNullableType'
    where {toJSON (PaymentLinksResourceAutomaticTaxLiability'NonNullableType'Other val) = val;
           toJSON (PaymentLinksResourceAutomaticTaxLiability'NonNullableType'Typed val) = Data.Aeson.Types.ToJSON.toJSON val;
           toJSON (PaymentLinksResourceAutomaticTaxLiability'NonNullableType'EnumAccount) = "account";
           toJSON (PaymentLinksResourceAutomaticTaxLiability'NonNullableType'EnumSelf) = "self"}
instance Data.Aeson.Types.FromJSON.FromJSON PaymentLinksResourceAutomaticTaxLiability'NonNullableType'
    where {parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "account" -> PaymentLinksResourceAutomaticTaxLiability'NonNullableType'EnumAccount
                                             | val GHC.Classes.== "self" -> PaymentLinksResourceAutomaticTaxLiability'NonNullableType'EnumSelf
                                             | GHC.Base.otherwise -> PaymentLinksResourceAutomaticTaxLiability'NonNullableType'Other val)}
