-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema SubscriptionSchedulesResourceDefaultSettingsAutomaticTax
module StripeAPI.Types.SubscriptionSchedulesResourceDefaultSettingsAutomaticTax where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import {-# SOURCE #-} StripeAPI.Types.Account
import {-# SOURCE #-} StripeAPI.Types.ConnectAccountReference

-- | Defines the object schema located at @components.schemas.subscription_schedules_resource_default_settings_automatic_tax@ in the specification.
-- 
-- 
data SubscriptionSchedulesResourceDefaultSettingsAutomaticTax = SubscriptionSchedulesResourceDefaultSettingsAutomaticTax {
  -- | enabled: Whether Stripe automatically computes tax on invoices created during this phase.
  subscriptionSchedulesResourceDefaultSettingsAutomaticTaxEnabled :: GHC.Types.Bool
  -- | liability: The account that\'s liable for tax. If set, the business address and tax registrations required to perform the tax calculation are loaded from this account. The tax transaction is returned in the report of the connected account.
  , subscriptionSchedulesResourceDefaultSettingsAutomaticTaxLiability :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable SubscriptionSchedulesResourceDefaultSettingsAutomaticTaxLiability'NonNullable))
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON SubscriptionSchedulesResourceDefaultSettingsAutomaticTax
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["enabled" Data.Aeson.Types.ToJSON..= subscriptionSchedulesResourceDefaultSettingsAutomaticTaxEnabled obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("liability" Data.Aeson.Types.ToJSON..=)) (subscriptionSchedulesResourceDefaultSettingsAutomaticTaxLiability obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["enabled" Data.Aeson.Types.ToJSON..= subscriptionSchedulesResourceDefaultSettingsAutomaticTaxEnabled obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("liability" Data.Aeson.Types.ToJSON..=)) (subscriptionSchedulesResourceDefaultSettingsAutomaticTaxLiability obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON SubscriptionSchedulesResourceDefaultSettingsAutomaticTax
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "SubscriptionSchedulesResourceDefaultSettingsAutomaticTax" (\obj -> (GHC.Base.pure SubscriptionSchedulesResourceDefaultSettingsAutomaticTax GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "enabled")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "liability"))}
-- | Create a new 'SubscriptionSchedulesResourceDefaultSettingsAutomaticTax' with all required fields.
mkSubscriptionSchedulesResourceDefaultSettingsAutomaticTax :: GHC.Types.Bool -- ^ 'subscriptionSchedulesResourceDefaultSettingsAutomaticTaxEnabled'
  -> SubscriptionSchedulesResourceDefaultSettingsAutomaticTax
mkSubscriptionSchedulesResourceDefaultSettingsAutomaticTax subscriptionSchedulesResourceDefaultSettingsAutomaticTaxEnabled = SubscriptionSchedulesResourceDefaultSettingsAutomaticTax{subscriptionSchedulesResourceDefaultSettingsAutomaticTaxEnabled = subscriptionSchedulesResourceDefaultSettingsAutomaticTaxEnabled,
                                                                                                                                                                                      subscriptionSchedulesResourceDefaultSettingsAutomaticTaxLiability = GHC.Maybe.Nothing}
-- | Defines the object schema located at @components.schemas.subscription_schedules_resource_default_settings_automatic_tax.properties.liability.anyOf@ in the specification.
-- 
-- The account that\\\'s liable for tax. If set, the business address and tax registrations required to perform the tax calculation are loaded from this account. The tax transaction is returned in the report of the connected account.
data SubscriptionSchedulesResourceDefaultSettingsAutomaticTaxLiability'NonNullable = SubscriptionSchedulesResourceDefaultSettingsAutomaticTaxLiability'NonNullable {
  -- | account: The connected account being referenced when \`type\` is \`account\`.
  subscriptionSchedulesResourceDefaultSettingsAutomaticTaxLiability'NonNullableAccount :: (GHC.Maybe.Maybe SubscriptionSchedulesResourceDefaultSettingsAutomaticTaxLiability'NonNullableAccount'Variants)
  -- | type: Type of the account referenced.
  , subscriptionSchedulesResourceDefaultSettingsAutomaticTaxLiability'NonNullableType :: (GHC.Maybe.Maybe SubscriptionSchedulesResourceDefaultSettingsAutomaticTaxLiability'NonNullableType')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON SubscriptionSchedulesResourceDefaultSettingsAutomaticTaxLiability'NonNullable
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account" Data.Aeson.Types.ToJSON..=)) (subscriptionSchedulesResourceDefaultSettingsAutomaticTaxLiability'NonNullableAccount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("type" Data.Aeson.Types.ToJSON..=)) (subscriptionSchedulesResourceDefaultSettingsAutomaticTaxLiability'NonNullableType obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account" Data.Aeson.Types.ToJSON..=)) (subscriptionSchedulesResourceDefaultSettingsAutomaticTaxLiability'NonNullableAccount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("type" Data.Aeson.Types.ToJSON..=)) (subscriptionSchedulesResourceDefaultSettingsAutomaticTaxLiability'NonNullableType obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON SubscriptionSchedulesResourceDefaultSettingsAutomaticTaxLiability'NonNullable
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "SubscriptionSchedulesResourceDefaultSettingsAutomaticTaxLiability'NonNullable" (\obj -> (GHC.Base.pure SubscriptionSchedulesResourceDefaultSettingsAutomaticTaxLiability'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "account")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "type"))}
-- | Create a new 'SubscriptionSchedulesResourceDefaultSettingsAutomaticTaxLiability'NonNullable' with all required fields.
mkSubscriptionSchedulesResourceDefaultSettingsAutomaticTaxLiability'NonNullable :: SubscriptionSchedulesResourceDefaultSettingsAutomaticTaxLiability'NonNullable
mkSubscriptionSchedulesResourceDefaultSettingsAutomaticTaxLiability'NonNullable = SubscriptionSchedulesResourceDefaultSettingsAutomaticTaxLiability'NonNullable{subscriptionSchedulesResourceDefaultSettingsAutomaticTaxLiability'NonNullableAccount = GHC.Maybe.Nothing,
                                                                                                                                                                subscriptionSchedulesResourceDefaultSettingsAutomaticTaxLiability'NonNullableType = GHC.Maybe.Nothing}
-- | Defines the oneOf schema located at @components.schemas.subscription_schedules_resource_default_settings_automatic_tax.properties.liability.anyOf.properties.account.anyOf@ in the specification.
-- 
-- The connected account being referenced when \`type\` is \`account\`.
data SubscriptionSchedulesResourceDefaultSettingsAutomaticTaxLiability'NonNullableAccount'Variants =
   SubscriptionSchedulesResourceDefaultSettingsAutomaticTaxLiability'NonNullableAccount'Text Data.Text.Internal.Text
  | SubscriptionSchedulesResourceDefaultSettingsAutomaticTaxLiability'NonNullableAccount'Account Account
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON SubscriptionSchedulesResourceDefaultSettingsAutomaticTaxLiability'NonNullableAccount'Variants
    where {toJSON (SubscriptionSchedulesResourceDefaultSettingsAutomaticTaxLiability'NonNullableAccount'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (SubscriptionSchedulesResourceDefaultSettingsAutomaticTaxLiability'NonNullableAccount'Account a) = Data.Aeson.Types.ToJSON.toJSON a}
instance Data.Aeson.Types.FromJSON.FromJSON SubscriptionSchedulesResourceDefaultSettingsAutomaticTaxLiability'NonNullableAccount'Variants
    where {parseJSON val = case (SubscriptionSchedulesResourceDefaultSettingsAutomaticTaxLiability'NonNullableAccount'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((SubscriptionSchedulesResourceDefaultSettingsAutomaticTaxLiability'NonNullableAccount'Account Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
                           {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                            Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the enum schema located at @components.schemas.subscription_schedules_resource_default_settings_automatic_tax.properties.liability.anyOf.properties.type@ in the specification.
-- 
-- Type of the account referenced.
data SubscriptionSchedulesResourceDefaultSettingsAutomaticTaxLiability'NonNullableType' =
   SubscriptionSchedulesResourceDefaultSettingsAutomaticTaxLiability'NonNullableType'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | SubscriptionSchedulesResourceDefaultSettingsAutomaticTaxLiability'NonNullableType'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | SubscriptionSchedulesResourceDefaultSettingsAutomaticTaxLiability'NonNullableType'EnumAccount -- ^ Represents the JSON value @"account"@
  | SubscriptionSchedulesResourceDefaultSettingsAutomaticTaxLiability'NonNullableType'EnumSelf -- ^ Represents the JSON value @"self"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON SubscriptionSchedulesResourceDefaultSettingsAutomaticTaxLiability'NonNullableType'
    where {toJSON (SubscriptionSchedulesResourceDefaultSettingsAutomaticTaxLiability'NonNullableType'Other val) = val;
           toJSON (SubscriptionSchedulesResourceDefaultSettingsAutomaticTaxLiability'NonNullableType'Typed val) = Data.Aeson.Types.ToJSON.toJSON val;
           toJSON (SubscriptionSchedulesResourceDefaultSettingsAutomaticTaxLiability'NonNullableType'EnumAccount) = "account";
           toJSON (SubscriptionSchedulesResourceDefaultSettingsAutomaticTaxLiability'NonNullableType'EnumSelf) = "self"}
instance Data.Aeson.Types.FromJSON.FromJSON SubscriptionSchedulesResourceDefaultSettingsAutomaticTaxLiability'NonNullableType'
    where {parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "account" -> SubscriptionSchedulesResourceDefaultSettingsAutomaticTaxLiability'NonNullableType'EnumAccount
                                             | val GHC.Classes.== "self" -> SubscriptionSchedulesResourceDefaultSettingsAutomaticTaxLiability'NonNullableType'EnumSelf
                                             | GHC.Base.otherwise -> SubscriptionSchedulesResourceDefaultSettingsAutomaticTaxLiability'NonNullableType'Other val)}
